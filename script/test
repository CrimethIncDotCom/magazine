#!/usr/bin/env ruby

# script/test: Run test suite for application. Optionally pass in a path to an
#              individual test file to run a single test.

require 'pathname'
require 'fileutils'
include FileUtils

# path to your application root.
APP_ROOT = Pathname.new File.expand_path('..', __dir__)

def system! *args
  system(*args) || abort("\n==> Command #{args} failed")
end

chdir APP_ROOT do
  # Run tests fast! (lightweight opts parser)
  # script/test -f  OR  script/test --fast
  run_fast = ARGV.include?('-f') || ARGV.include?('--fast')

  if run_fast
    ARGV.delete '-f'
    ARGV.delete '--fast'
  else
    # Ensure everything in the app is up to date
    system! 'script/update'
  end

  # Print output at the start of test run
  puts "==> Tests started at: #{Time.now.strftime('%H:%M:%S')}"

  # Run tests
  if ARGV[0].nil?
    # TEMP: RUBYOPT is to silence warning between Ruby 2.7.0 and Rails 6.0.2.2
    system! "RUBYOPT='-W:no-deprecated -W:no-experimental' bundle exec rspec"

    puts '==> Running Rubocopâ€¦'
    system! "RUBYOPT='-W:no-deprecated -W:no-experimental' bundle exec rubocop"
  else
    # Pass arguments to script/test. This is useful for calling a single test.
    system! "RUBYOPT='-W:no-deprecated -W:no-experimental' bundle exec rspec #{ARGV[0]}"

    puts "==> Running Rubocop on file: #{ARGV[0]}"
    system! "RUBYOPT='-W:no-deprecated -W:no-experimental' bundle exec rubocop #{ARGV[0]}"
  end

  puts "==> Tests finished at: #{Time.now.strftime('%H:%M:%S')}"
end
